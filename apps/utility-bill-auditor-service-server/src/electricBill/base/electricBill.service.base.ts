/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ElectricBill as PrismaElectricBill } from "@prisma/client";

export class ElectricBillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ElectricBillCountArgs, "select">
  ): Promise<number> {
    return this.prisma.electricBill.count(args);
  }

  async electricBills<T extends Prisma.ElectricBillFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ElectricBillFindManyArgs>
  ): Promise<PrismaElectricBill[]> {
    return this.prisma.electricBill.findMany<Prisma.ElectricBillFindManyArgs>(
      args
    );
  }
  async electricBill<T extends Prisma.ElectricBillFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ElectricBillFindUniqueArgs>
  ): Promise<PrismaElectricBill | null> {
    return this.prisma.electricBill.findUnique(args);
  }
  async createElectricBill<T extends Prisma.ElectricBillCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ElectricBillCreateArgs>
  ): Promise<PrismaElectricBill> {
    return this.prisma.electricBill.create<T>(args);
  }
  async updateElectricBill<T extends Prisma.ElectricBillUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ElectricBillUpdateArgs>
  ): Promise<PrismaElectricBill> {
    return this.prisma.electricBill.update<T>(args);
  }
  async deleteElectricBill<T extends Prisma.ElectricBillDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ElectricBillDeleteArgs>
  ): Promise<PrismaElectricBill> {
    return this.prisma.electricBill.delete(args);
  }
}
