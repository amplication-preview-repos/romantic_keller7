/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GasBill as PrismaGasBill } from "@prisma/client";

export class GasBillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GasBillCountArgs, "select">): Promise<number> {
    return this.prisma.gasBill.count(args);
  }

  async gasBills<T extends Prisma.GasBillFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GasBillFindManyArgs>
  ): Promise<PrismaGasBill[]> {
    return this.prisma.gasBill.findMany<Prisma.GasBillFindManyArgs>(args);
  }
  async gasBill<T extends Prisma.GasBillFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GasBillFindUniqueArgs>
  ): Promise<PrismaGasBill | null> {
    return this.prisma.gasBill.findUnique(args);
  }
  async createGasBill<T extends Prisma.GasBillCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GasBillCreateArgs>
  ): Promise<PrismaGasBill> {
    return this.prisma.gasBill.create<T>(args);
  }
  async updateGasBill<T extends Prisma.GasBillUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GasBillUpdateArgs>
  ): Promise<PrismaGasBill> {
    return this.prisma.gasBill.update<T>(args);
  }
  async deleteGasBill<T extends Prisma.GasBillDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GasBillDeleteArgs>
  ): Promise<PrismaGasBill> {
    return this.prisma.gasBill.delete(args);
  }
}
